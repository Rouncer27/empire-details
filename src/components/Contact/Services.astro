---
import { Image } from "astro:assets";
import Wrapper from "../shared/Wrapper.astro";
import Headline from "../shared/Headline.astro";
import "./services.scss";
import Button from "../shared/Button.astro";
---

<div class="services">
  <Wrapper>
    {
      Astro.props.data.servicesBlocks.map((block, index) => {
        const reversed = (index + 1) % 2 === 0;
        return (
          <div class={`services-item${reversed ? " services-item-alt" : ""}`}>
            <div class="services-item-graphic">
              <Image
                src={block.graphic.sourceUrl}
                alt={block.graphic.altText}
                inferSize={true}
              />
            </div>
            <div class="services-item-title">
              <Headline ele="h2" hlstyle="three">
                {block.title}
              </Headline>
              <Headline ele="p" hlstyle="four">
                {block.subTitle}
              </Headline>
            </div>
            <div class="services-item-details" set:html={block.details} />
            <div class="services-item-pricing">
              <ul>
                {block.pricingItems.map((item) => {
                  return (
                    <li>
                      <span>{item.itemTitle}</span>
                      <span>{item.itemPrice}</span>
                    </li>
                  );
                })}
              </ul>
            </div>
            <div class="services-item-addon">
              <ul>
                {block.addOns.map((item) => {
                  return <li>{item.addOnItem}</li>;
                })}
              </ul>
            </div>
            <div class="services-item-button">
              <Button
                btnstyle={reversed ? "one" : "two"}
                target="_blank"
                rel="noopener noreferrer"
                href={block.buttonUrl}
              >
                {block.buttonText}
              </Button>
            </div>
          </div>
        );
      })
    }
  </Wrapper>
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const trigger = document.querySelector(".services");
  const services = document.querySelectorAll(".services-item");

  if (trigger && services) {
    gsap.fromTo(
      services,
      { autoAlpha: 0, y: 200 },
      {
        autoAlpha: 1,
        y: 0,
        ease: "power4.out",
        duration: 2,
        stagger: {
          each: 0.5,
        },
        scrollTrigger: {
          start: "top 30%",
          markers: false,
          trigger: trigger,
        },
      },
    );
  }
</script>
